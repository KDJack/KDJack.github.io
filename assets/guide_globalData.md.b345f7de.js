import{d as e,h as t,C as a,c,k as s,H as l,w as r,Q as n,o as y}from"./chunks/framework.79a72220.js";const E=n(`<h1 id="globaldata-配置项" tabindex="-1">GlobalData 配置项 <a class="header-anchor" href="#globaldata-配置项" aria-label="Permalink to &quot;GlobalData 配置项&quot;">​</a></h1><h2 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h2><p>跟 formatData 相似，在开发过程中，遇到渲染含有多选项的 Element 组件（如 cascader / checkbox / select / radio 等）时，通常会将选项封装为数组，以支付方式为例：</p><div class="info custom-block"><p class="custom-block-title">@/data/index.ts</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 支付方式</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">payTypeList</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { label: </span><span style="color:#9ECBFF;">&#39;微信&#39;</span><span style="color:#E1E4E8;">, value: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { label: </span><span style="color:#9ECBFF;">&#39;支付宝&#39;</span><span style="color:#E1E4E8;">, value: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { label: </span><span style="color:#9ECBFF;">&#39;银联&#39;</span><span style="color:#E1E4E8;">, value: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 支付方式</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">payTypeList</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { label: </span><span style="color:#032F62;">&#39;微信&#39;</span><span style="color:#24292E;">, value: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { label: </span><span style="color:#032F62;">&#39;支付宝&#39;</span><span style="color:#24292E;">, value: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { label: </span><span style="color:#032F62;">&#39;银联&#39;</span><span style="color:#24292E;">, value: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">注册时传入 globalData</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 引用上文定义的函数</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> globalData </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/data&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(ElPlusCrud, {}, {}, </span><span style="color:#B392F0;">readonly</span><span style="color:#E1E4E8;">(globalData))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 引用上文定义的函数</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> globalData </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/data&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(ElPlusCrud, {}, {}, </span><span style="color:#6F42C1;">readonly</span><span style="color:#24292E;">(globalData))</span></span></code></pre></div></div>`,5),i={class:"info custom-block"},d=s("p",{class:"custom-block-title"},"vue 文件中使用",-1),u=n('<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">ElPlusFormSelect</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">desc</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">{ </span><span style="color:#B392F0;">options</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;payTypeList&#39;</span><span style="color:#E1E4E8;"> }</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">ElPlusFormSelect</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">desc</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">{ </span><span style="color:#6F42C1;">options</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;payTypeList&#39;</span><span style="color:#24292E;"> }</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div>',1),F=s("p",null,"是不是 so easy ?",-1),C=JSON.parse('{"title":"GlobalData 配置项","description":"","frontmatter":{},"headers":[],"relativePath":"guide/globalData.md","filePath":"guide/globalData.md"}'),h={name:"guide/globalData.md"},D=e({...h,setup(b){return t(),(g,m)=>{const o=a("ElPlusFormSelect"),p=a("ClientOnly");return y(),c("div",null,[E,s("div",i,[d,l(p,null,{default:r(()=>[l(o,{style:{margin:"16px 0"},desc:{options:"payTypeList"}})]),_:1}),u]),F])}}});export{C as __pageData,D as default};
