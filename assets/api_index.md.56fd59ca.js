import{_ as a,c as e,o as t,Q as o}from"./chunks/framework.79a72220.js";const f=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),r={name:"api/index.md"},s=o('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><h2 id="组件说明" tabindex="-1">组件说明 <a class="header-anchor" href="#组件说明" aria-label="Permalink to &quot;组件说明&quot;">​</a></h2><p>相信你已经看完了前面的 <a href="./../guide/desc.html">指南</a>（我就认为你看完了吧），全局安装完成后，接下来开始真正的了解和使用 CRUD ！</p><h2 id="文档构成" tabindex="-1">文档构成 <a class="header-anchor" href="#文档构成" aria-label="Permalink to &quot;文档构成&quot;">​</a></h2><p>目前文档由三部分构成：<a href="./components/btn.html">组件库</a> / <a href="./form/base.html">form 表单</a> / <a href="./table/base.html">table 表格</a></p><div class="tip custom-block"><p class="custom-block-title">注意</p><p><a href="./components/btn.html">组件库</a> 文档的目的在于介绍子组件的属性及使用方式。子组件虽然支持单独使用，但它并不是 CRUD 的精髓和初衷。所以作者推荐优先了解 <a href="./form/base.html">form 表单</a> 和 <a href="./table/base.html">table 表格</a> ，在使用过程中，再去查看组件库对应子组件的文档。</p></div>',6),i=[s];function l(n,h,c,d,m,_){return t(),e("div",null,i)}const b=a(r,[["render",l]]);export{f as __pageData,b as default};
