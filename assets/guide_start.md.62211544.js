import{_ as o,C as t,c as p,k as s,a,H as n,w as e,Q as c,o as r}from"./chunks/framework.8b14b79d.js";const P=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start.md","filePath":"guide/start.md"}'),i={name:"guide/start.md"},d=s("h1",{id:"安装",tabindex:"-1"},[a("安装 "),s("a",{class:"header-anchor",href:"#安装","aria-label":'Permalink to "安装"'},"​")],-1),y={class:"warning custom-block"},E=s("p",{class:"custom-block-title"},"注意",-1),_=s("p",null,"介意的小伙伴请勿食用~",-1),u=s("h2",{id:"前提",tabindex:"-1"},[a("前提 "),s("a",{class:"header-anchor",href:"#前提","aria-label":'Permalink to "前提"'},"​")],-1),h=s("p",null,"该组件是对 Element-Plus 组件库的二次封装，完全依赖 Element-Plus",-1),m=c(`<h2 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>在项目根目录的终端运行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">el-plus-crud</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-S</span></span>
<span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">or</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">el-plus-crud</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-S</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">el-plus-crud</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-S</span></span>
<span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">or</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">el-plus-crud</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-S</span></span></code></pre></div>`,3);function F(C,f,v,b,B,g){const l=t("font");return r(),p("div",null,[d,s("div",y,[E,s("p",null,[a("该组件由于 table 和 form 逻辑耦合较高，且需要在注册组件时传入相关配置信息，所以目前仅支持 "),n(l,{style:{color:"var(--vp-c-primary)"}},{default:e(()=>[a("app.use()")]),_:1}),a(" 方式进行全局注册，不支持局部注册，另外因为组件内部未打包 Element Plus 相关组件源码，所以 Element Plus 也需要全局注册！！！")]),_]),u,h,s("p",null,[a("所以该组件的应用项目场景应为："),n(l,{style:{color:"var(--vp-c-primary)"}},{default:e(()=>[a("VUE3 + TS + Element Plus ")]),_:1})]),m])}const S=o(i,[["render",F]]);export{P as __pageData,S as default};
