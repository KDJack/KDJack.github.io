import{_ as a,c as e,o as t,Q as o}from"./chunks/framework.7d5be37a.js";const m=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/desc.md","filePath":"guide/desc.md"}'),s={name:"guide/desc.md"},r=o('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><h2 id="概况" tabindex="-1">概况 <a class="header-anchor" href="#概况" aria-label="Permalink to &quot;概况&quot;">​</a></h2><p>该组件是真实用于作者参与开发的多个项目中，并且已经通过上线项目进行了检验，所以满足条件的小伙伴可以放心食用。</p><div class="warning custom-block"><p class="custom-block-title">食用范围</p><p>（作者认为）该组件目前只适用于小型 &amp; 快速开发的（外包）项目，大型项目的话慎用！至于公司产品的话就更不用说了，你都自研产品了，还能看上这个？</p></div><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>由于现在（业务相对简单的）后台管理端功能和页面都大同小异，特别针对小型的外包项目，大部分页面都是 CRUD，而 CRUD 的页面大多也是千篇一律，无非就是字段/接口的区别。</p><h2 id="痛点" tabindex="-1">痛点 <a class="header-anchor" href="#痛点" aria-label="Permalink to &quot;痛点&quot;">​</a></h2><p>针对这千篇一律的最好办法就是 CV，但当看到拷贝后满屏的标签以及样式代码，不禁又暗暗摇头，改个表单字段，不光要去找标签中的文本，还得去修改表单的定义，以及校验，甚至可能还要修改样式...</p><hr><p>修改一个字段，至少需要修改 2 处代码，而且还不在同一位置，时间大部分都浪费在 ctrl + f 上。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>有些同学在这里可能就要说，可以文件/全局替换啊。但是我想说的是，你字段是替换了，但是组件类型呢？ 原来是 input，新字段对应的万一是 select 呢？还是得 ctrl+f 定位到位置，再慢慢改...</p></div><h2 id="由来" tabindex="-1">由来 <a class="header-anchor" href="#由来" aria-label="Permalink to &quot;由来&quot;">​</a></h2><p>因此我便想能否封装一个组件，我只需要传入一个配置 json，json 中包含表单里所需的名称/属性/组件类型等信息，这个组件就能帮我渲染出来呢？</p><hr><p>答案是肯定的，用 vue 的 v-for + components 组件 就能轻松实现。</p><p>基于此原理，我便开始一步一步的完善该组件的功能...</p>',16),c=[r];function i(l,n,d,p,h,_){return t(),e("div",null,c)}const f=a(s,[["render",i]]);export{m as __pageData,f as default};
